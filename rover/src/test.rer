
TYPE
defining{
   TYPE is rover::lang::TYPE
   Integer32 is rover::lang::Integer32

   T is any{TYPE}
   val is any{T}

   Unit is Type{
      param Data is any{TYPE}
      param value is any{Data}
      variant new :Self
   }

   Unit::Self info{}
   Unit::new info{}
}


# Thing is Type{
#    param something is any{Integer32}
#    variant new :Self From{something is any{Integer32}}
# }

# Thing info{}
# Thing::new::something info{}

#=
recount is 
pick{
   if input == 0, 0
   else           recount[input - 1]
}
where{
   input is any{Integer32}
}
=#
