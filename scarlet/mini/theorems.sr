# UNIQUE.AS_LANGUAGE_ITEM[t_trivial_statement]
# UNIQUE.AS_LANGUAGE_ITEM[t_invariant_truth_statement]
# UNIQUE.AS_LANGUAGE_ITEM[t_invariant_truth_rev_statement]
UNIQUE.AS_LANGUAGE_ITEM[t_eq_ext_rev_statement]
UNIQUE.AS_LANGUAGE_ITEM[t_inv_eq_statement]
# UNIQUE.AS_LANGUAGE_ITEM[t_refl_statement]
UNIQUE.AS_LANGUAGE_ITEM[t_decision_eq_statement]
UNIQUE.AS_LANGUAGE_ITEM[t_decision_neq_statement]

true IS basics.true
false IS basics.false
x IS basics.x
fx IS basics.fx

# Abuse of various axioms to import theorems I want to be automatically applied.

# This one actually isn't abusive!
t_refl IS
{
   AXIOM[t_refl]

   (a = a)
   .AS_LANGUAGE_ITEM[t_refl_statement]

   a IS VAR[]
}
.VALUE
.AS_AUTO_THEOREM

# From a = b   u
# Proves DECISION[a b u v]
t_decision_eq_inv IS
{
   AXIOM[t_trivial]

   DECISION[a b u v]
   .AS_LANGUAGE_ITEM[t_trivial_statement]

   a IS VAR[]
   b IS VAR[a = SELF]
   u IS VAR[SELF]
   v IS VAR[]
}
.VALUE
.AS_AUTO_THEOREM

# From a =NOT b   v
# Proves DECISION[a b u v]
t_decision_neq_inv IS
{
   AXIOM[t_invariant_truth]

   DECISION[a b u v]
   .AS_LANGUAGE_ITEM[t_invariant_truth_statement]

   a IS VAR[]
   b IS VAR[DECISION[a SELF false true]]
   u IS VAR[]
   v IS VAR[SELF]
}
.VALUE
.AS_AUTO_THEOREM

t_decision_by_parts IS
{
   AXIOM[t_invariant_truth_rev]

   conclusion
   .WITH_DEPENDENCIES[a b c d fx]
   .AS_LANGUAGE_ITEM[t_invariant_truth_rev_statement]

   conclusion IS fx[inner]
   inner IS DECISION[a b c d]

   a IS VAR[]
   b IS VAR[]
   c IS VAR[fx[c]]
   d IS VAR[fx[d]]
}
.VALUE
.AS_AUTO_THEOREM
