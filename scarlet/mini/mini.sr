true IS UNIQUE AS_LANGUAGE_ITEM(true)
false IS UNIQUE AS_LANGUAGE_ITEM(false)
void IS UNIQUE AS_LANGUAGE_ITEM(void)

{
    has_tail IS BUILTIN_FUNCTION(has_tail)
    x IS VAR() AS_LANGUAGE_ITEM(x)
    y IS VAR() AS_LANGUAGE_ITEM(y)

    when_equal IS 
    VAR() AS_LANGUAGE_ITEM(when_equal)

    when_not_equal IS 
    VAR() AS_LANGUAGE_ITEM(when_not_equal)
}

tail_value IS BUILTIN_FUNCTION(tail_value)

std IS {
    x IS VAR(ORD 32) AS_LANGUAGE_ITEM(x)
    fx IS VAR(DEP x ORD 32)
}

x IS std.x
fx IS std.fx

eq_ext_rev_t IS 
tail_value({
    y IS VAR()
    z IS VAR(y = SELF)

    x(fx(z) = fx(y))
    AS_LANGUAGE_ITEM(eq_ext_rev_t_statement)

    AXIOM(eq_ext_rev_t)
})

eq_symm_t IS 
tail_value({
    u IS VAR()
    v IS VAR(u = SELF)
    identity IS VAR()

    eq_ext_rev_t(identity u v)
})

{
    VAR(SELF)(fx(s) = fx(t))

    eq_ext_rev_t(fx t s)

    eq_symm_t(s t)

    s IS VAR()
    t IS VAR(s = SELF)
}