0 defining{
    TYPE is builtin_item{TYPE}
    I32 is builtin_item{Integer32}

    Unit vn TYPE From{value}
    defining{
        Data is any{TYPE}
        value is any{Data}
    }

    ProofEqual vn TYPE From{left right}
    defining{
        Data is any{TYPE}
        left is any{Data}
        right is any{Data}

        reflexive vn ProofEqual
        replacing{
            left with x
            right with x
        }
        defining{
            x is any{Data}
        }

        reinterpret is 
        builtin_item{
            reinterpret
            this
            type[param with left]
            type[param with right]
            value
        }
        defining{
            this is any{ProofEqual}
            param is any{Data}
            type is any{TYPE From{param}}
            value is any{type[param with left]}
        }
    }

    ProofEqual::reinterpret 
    replacing{
        ProofEqual::Data with TYPE
        ProofEqual::left with I32
        ProofEqual::right with TYPE
    }
    info{}

    # ProofEqual::reinterpret is
    # builtin_item{
    #     reinterpret 
    #     ProofEqual::reinterpret::this 
    #     ProofEqual::reinterpret::type[
    #         ProofEqual::reinterpret::param is ProofEqual::left
    #     ] 
    #     ProofEqual::reinterpret::type[
    #         ProofEqual::reinterpret::param is ProofEqual::right
    #     ] 
    #     ProofEqual::reinterpret::value
    # }
    # type_is{
    #     ProofEqual::reinterpret::type[
    #         ProofEqual::reinterpret::param is ProofEqual::right
    #     ] 
    #     From{ 
    #         ProofEqual::Data 
    #         ProofEqual::left 
    #         ProofEqual::right 
    #         ProofEqual::reinterpret::this 
    #         ProofEqual::reinterpret::type 
    #         ProofEqual::reinterpret::value 
    #     }
    # }

    # ZeroUnit is IntUnit replacing{Unit::b with 1}
    # ZeroUnitAgain is ZeroUnit info{}
}