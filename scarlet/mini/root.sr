defining{
    TYPE is builtin_item{TYPE}

    defining{
        zero is instance_of{Bit}
        one is instance_of{Bit}
    }
    Bit is instance_of{TYPE}

    x is any{Bit}
    not is 
    x matching{
        on{Bit::zero} Bit::one
        on{Bit::one} Bit::zero
    }

    defining{
        bit1 is any{Bit}
        bit2 is any{Bit}
        new is instance_of{From{bit1} From{bit2} Holder}
    }
    Holder is instance_of{TYPE}

    anyh is any{Holder}

    extract is anyh
    matching{
        on{Holder::new} Holder::bit1
    }
}
extract[Holder::new[Bit::zero]]
displayed{}