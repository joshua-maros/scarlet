# From DECISION(y   z   t = u   t = v)
# Proves t = DECISION(y z u v)
extract_eq_from_decision_t IS 
{
   just_t(t = conclusion_right)

   DECISION(
      y z

      {
         # Proves t = conclusion_right
         eq_trans_t(t u conclusion_right)
         # Proves u = conclusion_right
         eq_symm_t(conclusion_right u)
         # Proves conclusion_right = u
         decision_eq_t(y z u v)
         # Proves t = u
         inv_eq_t(hypothesis   t = u)
         # Proves hypothesis = just(t = u)
         decision_eq_t(y   z   t = u   t = v)
      }
      .VALUE

      {
         # Proves t = conclusion_right
         eq_trans_t(t v conclusion_right)
         # Proves v = conclusion_right
         eq_symm_t(conclusion_right v)
         # Proves conclusion_right = v
         decision_neq_t(y z u v)
         # Proves t = v
         inv_eq_t(hypothesis   t = v)
         # Proves hypothesis = just(t = v)
         decision_neq_t(
            y   z   t = u   t = v
         )
      }
      .VALUE
   )

   hypothesis IS 
   DECISION(y   z   t = u   t = v)

   conclusion IS t = conclusion_right
   conclusion_right IS DECISION(y z u v)

   y IS VAR()
   z IS VAR()
   t IS VAR()
   u IS VAR()
   v IS VAR(hypothesis)
}
.VALUE

# From y = z   u
# Proves DECISION(y z u v)
decision_eq_inv_t IS
{
   just_t(DECISION(y z u v))

   # Proves DECISION(y z u v)
   inv_eq_t(u   DECISION(y z u v))
   # Proves u = DECISION(y z u v)
   eq_symm_t(DECISION(y z u v)   u)
   # Proves DECISION(y z u v) = u
   decision_eq_t(y z u v)

   y IS VAR()
   z IS VAR(y = SELF)
   u IS VAR(SELF)
   v IS VAR()
}
.VALUE

# From y =NOT z   v
# Proves DECISION(y z u v)
decision_neq_inv_t IS
{
   just_t(DECISION(y z u v))

   # Proves DECISION(y z u v)
   inv_eq_t(v   DECISION(y z u v))
   # Proves v = DECISION(y z u v)
   eq_symm_t(DECISION(y z u v)   v)
   # Proves DECISION(y z u v) = v
   decision_neq_t(y z u v)

   y IS VAR()
   z IS VAR(DECISION(y SELF false true))
   u IS VAR()
   v IS VAR(SELF)
}
.VALUE

# From f(u)   f(v)
# Proves f(DECISION(y z u v))
decision_by_parts_ext_t IS
{
   just_t(conclusion)

   DECISION(
      y z

      {
         just_t(conclusion)
         # Proves conclusion
         inv_eq_t(f(u) conclusion)
         # Proves f(u) = conclusion
         eq_ext_t(f u inner)
         # Proves u = inner
         eq_symm_t(inner u)
         # Proves inner = u
         decision_eq_t(y z u v)
      }
      .VALUE

      {
         just_t(conclusion)
         # Proves conclusion
         inv_eq_t(f(v) conclusion)
         # Proves f(v) = conclusion
         eq_ext_t(f v inner)
         # Proves v = inner
         eq_symm_t(inner v)
         # Proves inner = v
         decision_neq_t(y z u v)
      }
      .VALUE
   )

   conclusion IS f(inner)
   inner IS DECISION(y z u v)

   y IS VAR()
   z IS VAR()
   u IS VAR(f(u))
   v IS VAR(f(v))
}
.VALUE

decision_by_parts_t IS
{
   just_t(conclusion)

   decision_by_parts_ext_t(VAR() y z u v)

   conclusion IS DECISION(y z u v)

   y IS VAR()
   z IS VAR()
   u IS VAR(u)
   v IS VAR(v)
}
.VALUE

just_t IS 
{
   VAR(SELF)
}
.VALUE