{
  t_eq_symm IS 
  {
    t_just[ true ]
    # t_just[ b = a ]
    # .WITH_DEPENDENCIES[ a b ]

    # t_eq_ext_rev[ a b x ]

    # a IS VAR[ ]
    # b IS VAR[ a = SELF ]
  }
  .VALUE

  # From a = b
  # Proves fx[ a ] = fx[ b ]
  t_eq_ext IS 
  {
    # t_just[ fx[ a ] = fx[ b ] ]
    # .WITH_DEPENDENCIES[ a b fx ]

    # t_eq_ext_rev[ b a ]

    # Proves b = a
    t_eq_symm[ ]

    a IS VAR[ ]
    b IS VAR[ a = SELF ]
  }
  .VALUE

  # # From a=b  fx[ a ]
  # # Proves fx[ b ]
  # t_inv_eq_ext IS 
  # {
  #   t_just[ fx[ b ] ]
  #   .WITH_DEPENDENCIES[ a b fx ]

  #   t_inv_eq[ fx[ a ]  fx[ b ] ]

  #   t_just[ fx[ a ] = fx[ b ] ]

  #   # Proves fx[ a ] = fx[ b ]
  #   t_eq_ext[ a b ]

  #   a IS VAR[ ]
  #   b IS VAR[ a = SELF ]
  #   fx IS VAR[ SELF[ a ]  DEP x ]
  # }
  # .VALUE

  # # From false
  # # Proves b
  # t_explode_false IS
  # {
  #   t_just[ b ]

  #   t_inv_eq_ext[ false true true_or_b ]
  #   true_or_b IS DECISION[ x false true b ]
  #   t_invariant_truth[ false ]
  #   b IS VAR[ false ]
  # }
  # .VALUE

  # # From a = b  b = c
  # # Proves a = c
  # t_eq_trans IS 
  # {
  #   t_just[ a = c ]
  #   .WITH_DEPENDENCIES[ a b c ]

  #   t_inv_eq[ a = b  a = c ]
  #   t_eq_ext[ b c a_equals_x ]
  #   a_equals_x IS
  #   (a = x).WITH_DEPENDENCIES[ x ]

  #   a IS VAR[ ]
  #   b IS VAR[ a = SELF ]
  #   c IS VAR[ b = SELF ]
  # }
  # .VALUE

  # # From DECISION[ a  b  x = u  x = v ]
  # # Proves x = DECISION[ a b u v ]
  # t_extract_eq_from_decision IS 
  # {
  #   DECISION[
  #     a b

  #     {
  #       # # Proves t = conclusion_right
  #       # t_eq_trans[ t u conclusion_right ]
  #       # # Proves u = conclusion_right
  #       # t_eq_symm[ conclusion_right u ]
  #       # Proves conclusion_right = u
  #       t_decision_eq[ a b u v ]
  #       # Proves t = u
  #       t_inv_eq[ hypothesis  t = u ]
  #       # Proves hypothesis = (t = u)
  #       t_decision_eq[ a  b  t = u  t = v ]
  #     }
  #     .VALUE

  #     void
  #   ]

  #   hypothesis IS DECISION[ a  b  t = u  t = v ]
  #   conclusion IS t = conclusion_right
  #   conclusion_right IS DECISION[ a b u v ]

  #   a IS VAR[ ]
  #   b IS VAR[ ]
  #   t IS VAR[ ]
  #   u IS VAR[ ]
  #   v IS VAR[ hypothesis ]
  # }
  # .VALUE

  t_just IS VAR[ SELF ]
  t_trivial IS AXIOM[ t_trivial ]
  t_invariant_truth IS AXIOM[ t_invariant_truth ]
  t_eq_ext_rev IS AXIOM[ t_eq_ext_rev ]
  t_inv_eq IS AXIOM[ t_inv_eq ]
  t_refl IS AXIOM[ t_refl ]
  t_decision_eq IS AXIOM[ t_decision_eq ]
  t_decision_neq IS AXIOM[ t_decision_neq ]

  t_invariant_truth_rev IS 
  AXIOM[ t_invariant_truth_rev ]

  true.AS_LANGUAGE_ITEM[ t_trivial_statement ]

  {
    a IS VAR[ SELF ]

    (a = true)
    .AS_LANGUAGE_ITEM[ 
      t_invariant_truth_statement 
    ]
  }

  {
    a IS VAR[ SELF = true ]

    a
    .AS_LANGUAGE_ITEM[ 
      t_invariant_truth_rev_statement 
    ]
  }

  {
    a IS VAR[]
    b IS VAR[ a = SELF ]

    (fx[ b ] = fx[ a ])
    .WITH_DEPENDENCIES[ a b fx ]
    .AS_LANGUAGE_ITEM[ t_eq_ext_rev_statement ]
  }

  {
    a IS VAR[ SELF ]
    b IS VAR[ a = SELF ]

    b
    .WITH_DEPENDENCIES[ a b ]
    .AS_LANGUAGE_ITEM[ t_inv_eq_statement ]
  }

  {
    a IS VAR[ ]

    (a = a)
    .AS_LANGUAGE_ITEM[ t_refl_statement ]
  }

  {
    (DECISION[ a b u v ] = u)
    .AS_LANGUAGE_ITEM[ t_decision_eq_statement ]

    a IS VAR[ ]
    b IS VAR[ a = b ]
    u IS VAR[ ]
    v IS VAR[ ]
  }

  {
    (DECISION[ a b u v ] = v)
    .AS_LANGUAGE_ITEM[ t_decision_neq_statement ]

    a IS VAR[ ]
    b IS VAR[ DECISION[ a b false true ] ]
    u IS VAR[ ]
    v IS VAR[ ]
  }

  fx IS VAR[ DEP x ]
  x IS VAR[]

  true IS UNIQUE.AS_LANGUAGE_ITEM[ true ]
  false IS UNIQUE.AS_LANGUAGE_ITEM[ false ]
  void IS UNIQUE.AS_LANGUAGE_ITEM[ void ]
}