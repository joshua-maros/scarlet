{
  t_eq_symm IS 
  {
    t_eq_ext_rev[ a b x ]
    .WITH_DEPENDENCIES[ a b ]

    a IS VAR[ ]
    b IS VAR[ a = SELF ]
  }
  .VALUE

  # From a = b
  # Proves fx[ a ] = fx[ b ]
  t_eq_ext IS 
  {
    t_eq_ext_rev[ b a ]
    .WITH_DEPENDENCIES[ a b ]
    # Proves b = a
    t_eq_symm[ a b ]

    a IS VAR[ ]
    b IS VAR[ a = SELF ]
  }
  .VALUE

  # From a=b  fx[ a ]
  # Proves fx[ b ]
  t_inv_eq_ext IS 
  {
    t_inv_eq[ fx[ a ]  fx[ b ] ]
    .WITH_DEPENDENCIES[ a b fx ]
    # Proves fx[ a ] = fx[ b ]
    t_eq_ext[ a b fx ]

    a IS VAR[ ]
    b IS VAR[ a = SELF ]
    fx IS VAR[ SELF[ a ]  SUB x ]
  }
  .VALUE

  # From false
  # Proves b
  t_explode_false IS
  {
    t_inv_eq_ext[ false true true_or_b ]
    true_or_b IS DECISION[ x false true b ]
    t_invariant_truth[ false ]
    b IS VAR[ false ]
  }
  .VALUE

  # From a = b  b = c
  # Proves a = c
  t_eq_trans IS 
  {
    t_inv_eq[ a = b  a = c ]
    t_eq_ext[ b c a_equals_x ]
    a_equals_x IS
    (a = x).WITH_DEPENDENCIES[ x ]

    a IS VAR[ ]
    b IS VAR[ a = SELF ]
    c IS VAR[ b = SELF ]
  }
  .VALUE

  # From a  a = false
  # Proves b
  t_explode_contradiction IS
  {
    t_explode_false[ b ]
    # Proves false
    t_eq_trans[ false a true ]
    # Proves false = a
    t_eq_symm[ a false ]
    # Proves a = true
    t_invariant_truth[ a ]

    a IS VAR[ SELF  SELF = false ]
    b IS VAR[ ]
  }
  .VALUE

  t_explode_contradiction[ false ].SHOWN

  t_just IS VAR[ SELF ]
  t_trivial IS AXIOM[ t_trivial ]
  t_invariant_truth IS AXIOM[ t_invariant_truth ]
  t_eq_ext_rev IS AXIOM[ t_eq_ext_rev ]
  t_inv_eq IS AXIOM[ t_inv_eq ]

  t_invariant_truth_rev IS 
  AXIOM[ t_invariant_truth_rev ]


  true.AS_LANGUAGE_ITEM[ t_trivial_statement ]

  {
    a IS VAR[ SELF ]

    (a = true)
    .AS_LANGUAGE_ITEM[ 
      t_invariant_truth_statement 
    ]
  }

  {
    a IS VAR[ SELF = true ]

    a
    .AS_LANGUAGE_ITEM[ 
      t_invariant_truth_rev_statement 
    ]
  }

  {
    a IS VAR[]
    b IS VAR[ a = SELF ]

    (fx[ b ] = fx[ a ])
    .WITH_DEPENDENCIES[ a b fx ]
    .AS_LANGUAGE_ITEM[ t_eq_ext_rev_statement ]
  }

  {
    a IS VAR[ SELF ]
    b IS VAR[ a = SELF ]

    b
    .WITH_DEPENDENCIES[ a b ]
    .AS_LANGUAGE_ITEM[ t_inv_eq_statement ]
  }

  fx IS VAR[ SUB x ]
  x IS VAR[]

  true IS UNIQUE.AS_LANGUAGE_ITEM[ true ]
  false IS UNIQUE.AS_LANGUAGE_ITEM[ false ]
  void IS UNIQUE.AS_LANGUAGE_ITEM[ void ]
}