{
  # t_invariant_truth[ a ].SHOWN
  # t_invariant_truth_rev[ a ].SHOWN
  # t_invariant_truth[ false ]
  # t_invariant_truth_inv[ false ]

  # something IS fx[ a ][ fx IS VAR[ ] ].SHOWN

  t_eq_symm IS 
  {
    t_eq_ext_rev[ a b x ]
    .WITH_DEPENDENCIES[ a b ]
    .SHOWN

    a IS VAR[ ]
    b IS VAR[ a = SELF ]
    # x IS VAR[ ]
  }
  .VALUE

  c IS VAR[ ]
  d IS VAR[ c = SELF ]

  t_eq_symm[ c d ].SHOWN
  # t_just[ b = a ].SHOWN

  t_just IS VAR[ SELF ]
  t_trivial IS AXIOM[ t_trivial ]
  t_invariant_truth IS AXIOM[ t_invariant_truth ]
  t_eq_ext_rev IS AXIOM[ t_eq_ext_rev ]
  t_inv_eq IS AXIOM[ t_inv_eq ]

  t_invariant_truth_rev IS 
  AXIOM[ t_invariant_truth_rev ]


  true.AS_LANGUAGE_ITEM[ t_trivial_statement ]

  {
    a IS VAR[ SELF ]

    (a = true)
    .AS_LANGUAGE_ITEM[ 
      t_invariant_truth_statement 
    ]
  }

  {
    a IS VAR[ SELF = true ]

    a
    .AS_LANGUAGE_ITEM[ 
      t_invariant_truth_rev_statement 
    ]
  }

  {
    a IS VAR[]
    b IS VAR[ a = SELF ]

    (fx[ b ] = fx[ a ])
    .WITH_DEPENDENCIES[ a b fx ]
    .AS_LANGUAGE_ITEM[ t_eq_ext_rev_statement ]
  }

  {
    a IS VAR[ SELF ]
    b IS VAR[ a = SELF ]

    b
    .WITH_DEPENDENCIES[ a b ]
    .AS_LANGUAGE_ITEM[ t_inv_eq_statement ]
  }

  fx IS VAR[ SUB x ]
  x IS VAR[]

  true IS UNIQUE.AS_LANGUAGE_ITEM[ true ]
  false IS UNIQUE.AS_LANGUAGE_ITEM[ false ]
  void IS UNIQUE.AS_LANGUAGE_ITEM[ void ]
}