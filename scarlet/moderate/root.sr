[
    BOOL is builtin{BOOL any BOOL}
    32U is builtin{32U any 32U}
    PATTERN is builtin{PATTERN}

    condition is BOOL.V
    PROOF is condition.Eager(Self) AND true

    # This should not be dependant on x and y
    {
        the_x is x
        the_y is y
    }

    # However, this should.
    {
        the_x is x.Eager(x)
        the_y is y.Eager(y)
    }

    # And this? Maybe? At least not for now.
    {
        the_x is x
        the_y is y
    }
    .Shy(x y)

    # This should be dependant on x
    # Because x is dependant on x, so a reference to x 
    # should also be dependant on x.
    {
        the_x is x
        the_y is y
    }
    .the_x

    # This should be dependant on x
    y.Match(
        on x.Eager(x) 123
        else 456
    )

    # This should not.
    y.Match(
        on x.Shy(x) 123
        else unreachable
    )

    # This should also be dependant on x.
    {
        something is 
        {
            value is x.Eager(x)
        }
    }

    # This will always be dependant on x.
    y.Match(
        on 123 x
        else   123
    )

    # Depends on "x" and the new variable.
    x.Eager(x).Var

    # x.Var.Eager(All)
    x.Var.Eager(Self)

    # How do we express functions?
    f is 32U.Var(x y)

    f is 32U.Var(x)

    called_with_one is f(1)

    # Reduces to 4
    called_with_one(x + 3)
]