void
defining{
    TYPE is scarlet::core::TYPE
    void is scarlet::core::Void::void
    I32 is scarlet::core::Integer32
    PEq is scarlet::core::ProofEqual
    smvr is scarlet::core::are_same_variant
    true is scarlet::core::Boolean::true

    variant Primary :TYPE
    defining{
        variant red   :Primary
        variant green :Primary
        variant blue  :Primary
    }

    fibb is 
    pick{
        if smvr[I32 index 0], 1
        elif smvr[I32 index 1], 1
        else I32::sum[
            fibb[I32::difference[index 1]]
            fibb[I32::difference[index 2]]
        ]
    }
    defining{
        index is any{I32}
    }

    # PEq::reinterpret::this info{}
    # PEq::reinterpret[I32 123 456] info{}
    # PEq::reflexive[I32 123] info{}
}
